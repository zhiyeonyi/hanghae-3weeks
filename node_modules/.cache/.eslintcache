[{"/Users/yizhiyeon/Desktop/SPARTA_REACT/week/src/index.js":"1","/Users/yizhiyeon/Desktop/SPARTA_REACT/week/src/reportWebVitals.js":"2","/Users/yizhiyeon/Desktop/SPARTA_REACT/week/src/App.js":"3","/Users/yizhiyeon/Desktop/SPARTA_REACT/week/src/Detail.js":"4","/Users/yizhiyeon/Desktop/SPARTA_REACT/week/src/Week.js":"5"},{"size":540,"mtime":1637298700269,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1637186051016,"results":"8","hashOfConfig":"7"},{"size":754,"mtime":1637404871243,"results":"9","hashOfConfig":"7"},{"size":2140,"mtime":1637409376524,"results":"10","hashOfConfig":"7"},{"size":1906,"mtime":1637409228431,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ix8zmj",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/yizhiyeon/Desktop/SPARTA_REACT/week/src/index.js",[],"/Users/yizhiyeon/Desktop/SPARTA_REACT/week/src/reportWebVitals.js",[],"/Users/yizhiyeon/Desktop/SPARTA_REACT/week/src/App.js",[],"/Users/yizhiyeon/Desktop/SPARTA_REACT/week/src/Detail.js",["24","25"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory, useParams } from \"react-router\";\n\n\nconst Detail = (props) => {\n    console.log(props);\n    const history = useHistory();\n    const day = useParams();\n    // console.log(day.day);\n    const circle_count = Array.from({length: 5 },(v,i)=> i);\n    const my_wrap = React.useRef([]);\n    \n    console.log(my_wrap);\n\n    const hoverEvent = (t) => {\n        if(t.target == my_wrap.current[0]){\n        my_wrap.current[0].style.background = \"yellow\";\n        }\n        }\n\n        React.useEffect(() =>{\n            my_wrap.current[0].addEventListener(\"click\", hoverEvent);\n\n            return () => {\n                my_wrap.current.removeEventListener(\"click\",hoverEvent);\n            }\n        },[]);\n\n    return ( \n       <div>\n        <Title>\n          <span>\n           { day.day}요일\n          </span>\n          평점 남기기\n        </Title>\n        <FiveCircle >       \n            {circle_count.map((n,i) => {\n                    return (\n                    <div key={i}>\n                    <Circle ref= {(t) => (my_wrap.current.push(t))} />\n                    </div>\n                    );\n                })}\n        </FiveCircle>\n        {/* <FiveCircle >       \n            <Circle ref= {my_wrap} />\n            <Circle ref= {my_wrap} />\n        </FiveCircle> */}\n    \n        <GoWeek onClick={() => {\n            history.push(\"/\");\n            }}>\n                평점 남기기\n            </GoWeek>\n        </div>\n    );\n}\n\nconst Title = styled.h3`\n    span { \n        color: white;\n        background-color: orange;\n        padding: 0.5rem;\n        border-radius: 5px;\n    }\n    text-align: center;\n`\nconst FiveCircle=styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 30px;\n`\n\nconst Circle = styled.div`\n  display: flex;\n  width: 30px; \n  height: 30px; \n  border-radius: 30px; \n  margin: 5px; \n  background-color: lightgray;\n`;\n\nconst GoWeek = styled.button`\n    width: 100%;\n    background-color: purple;\n    border: none;\n    border-radius: 5px;\n    padding: 1rem;\n    color: white;\n`\n\n\nexport default Detail;\n","/Users/yizhiyeon/Desktop/SPARTA_REACT/week/src/Week.js",["26"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nconst Week = (props) => {\n  const history =useHistory();\n  const my_weekarr= props.weekarr;\n  const [count] = React.useState(5);\n  console.log(count)\n  const circle_count = Array.from({length: count },(v,i)=> i);\n  const random_num= Math.floor(Math.random()*5+1);\n  console.log(random_num)\n\n\n  return (\n      <ListStyle>\n        <h3>내 일주일은?</h3>\n        {my_weekarr.map((weekarr, i) => {\n          return (\n            <ItemStyle key={i}>\n              {weekarr} {circle_count.map((n,i) => {\n                return (\n                <div key={i}>\n                  <Circle/>\n                </div>\n                );\n              })} <GoDetail to={`/detail/${weekarr}`} />\n            </ItemStyle>\n          );\n        })}\n\n      </ListStyle>   \n  );\n};\n\nconst ListStyle = styled.div`\n  flex-direction: column;\n  display: flex; \n  justify-content: center; \n  align-items: center; \n  margin: 1rem 0px; \n  width: 100%; \n`;\n\nconst ItemStyle = styled.div`\n  padding: 8x;\n  display: flex;\n  justify-content: center; \n  align-items: center; \n  margin: 1rem 0px; \n  width: 100%;\n  font-weight: bold;\n  h3 {\n    text-align: center;\n  }\n`;\n\nconst Circle = styled.div`\n  display: flex;\n  width: 30px; \n  height: 30px; \n  border-radius: 30px; \n  margin: 5px; \n  background-color: lightgray;\n  flex-direction: row;\n`;\n\nconst GoDetail = styled(Link)`\n  appearance: none; \n  background-color: transparent; \n  border-color: transparent purple; \n  width: 0px; \n  height: 0px; \n  border-top-width: 1rem; \n  border-top-style: solid; \n  border-bottom-width: 1rem; \n  border-bottom-style: solid; \n  border-left-width: 1.6rem; \n  border-left-style: solid; \n  color: purple; \n  cursor: pointer;\n`\n\n// const WeekDay = styled.div`\n    \n// ;\n\nexport default Week; ",{"ruleId":"27","severity":1,"message":"28","line":17,"column":21,"nodeType":"29","messageId":"30","endLine":17,"endColumn":23},{"ruleId":"31","severity":1,"message":"32","line":26,"column":25,"nodeType":"33","endLine":26,"endColumn":32},{"ruleId":"34","severity":1,"message":"35","line":7,"column":9,"nodeType":"33","messageId":"36","endLine":7,"endColumn":16},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","The ref value 'my_wrap.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'my_wrap.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","no-unused-vars","'history' is assigned a value but never used.","unusedVar"]